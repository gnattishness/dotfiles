# Config for sway
#
# Based on EndeavorOS config
#
# Read `man 5 sway` for a complete reference.
#
# TODO grep i3
# replace .config with something that handles $XDG_CONFIG_HOME

# only enable this if every app you use is compatible with wayland
# xwayland disable

# Set mod key (Mod1=<Alt>, Mod4=<Super>)
set $mod Mod4
set $mod1 Mod1

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred terminal emulators
set $term alacritty

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# TODO revisit
set $menu wofi -c ~/.config/wofi/config -I

set $powermenu ~/.config/waybar/scripts/power-menu.sh

### Idle configuration
# TODO revisit - config paths seem unnecessary, should before-sleep have -f?
exec swayidle -w \
    timeout 1070 'swaylock -f -C ~/.config/swaylock/config' \
    timeout 770 'swaymsg "output * dpms off"' \
    resume 'swaymsg "output * dpms on"' \
    before-sleep 'swaylock -C ~/.config/swaylock/config'
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.


### Key bindings
#
# Basics:
#
    # Lock Screen
    # TODO 0? Fx weird for laptop
     bindsym $mod+f1 exec ~/.config/sway/scripts/lockman.sh

    # Start a terminal
    bindsym $mod+Return exec $term
    # alt terminal
    bindsym $mod+Shift+Return exec xfce4-terminal

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Open the power menu
    bindsym $mod+Shift+e exec $powermenu

    # Start your launcher
    bindsym $mod+d exec $menu

    # Current open windows
    bindsym $mod+p exec ~/.config/wofi/windows.py

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    # TODO maybe remove with current login mgr
    # this is in the swaybar config already?
    #bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

#
# Moving around and focus:
#
    # Move your focus around
    bindsym $mod1+$left focus left
    bindsym $mod1+$down focus down
    bindsym $mod1+$up focus up
    bindsym $mod1+$right focus right
    # Or use $mod1+[up|down|left|right]
    bindsym $mod1+Left focus left
    bindsym $mod1+Down focus down
    bindsym $mod1+Up focus up
    bindsym $mod1+Right focus right
    # $mod also allowed for arrow keys
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window - same as above, but add Shift
    bindsym $mod1+Shift+$left move left
    bindsym $mod1+Shift+$down move down
    bindsym $mod1+Shift+$up move up
    bindsym $mod1+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod1+Shift+Left move left
    bindsym $mod1+Shift+Down move down
    bindsym $mod1+Shift+Up move up
    bindsym $mod1+Shift+Right move right
    # Also allow $mod for arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

    focus_follows_mouse no
    mouse_warping none


#
# Workspaces:
#
    # Workspace names
    # to display names or symbols instead of plain workspace numbers you can use
    # something like: set $ws1 1:mail
    #                 set $ws2 2:
    set $ws1 1
    set $ws2 2
    set $ws3 3
    set $ws4 4
    set $ws5 5
    set $ws6 6
    set $ws7 7
    set $ws8 8
    set $ws9 9
    set $ws10 10

    # Switch to workspace
    bindsym $mod+1 workspace number $ws1
    bindsym $mod+2 workspace number $ws2
    bindsym $mod+3 workspace number $ws3
    bindsym $mod+4 workspace number $ws4
    bindsym $mod+5 workspace number $ws5
    bindsym $mod+6 workspace number $ws6
    bindsym $mod+7 workspace number $ws7
    bindsym $mod+8 workspace number $ws8
    bindsym $mod+9 workspace number $ws9
    bindsym $mod+0 workspace number $ws10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number $ws1
    bindsym $mod+Shift+2 move container to workspace number $ws2
    bindsym $mod+Shift+3 move container to workspace number $ws3
    bindsym $mod+Shift+4 move container to workspace number $ws4
    bindsym $mod+Shift+5 move container to workspace number $ws5
    bindsym $mod+Shift+6 move container to workspace number $ws6
    bindsym $mod+Shift+7 move container to workspace number $ws7
    bindsym $mod+Shift+8 move container to workspace number $ws8
    bindsym $mod+Shift+9 move container to workspace number $ws9
    bindsym $mod+Shift+0 move container to workspace number $ws10

    #navigate workspaces next / previous
    bindsym $mod+Ctrl+Right workspace next
    bindsym $mod+Ctrl+Left workspace prev
    # for some reason this comes up with a prompt that says "empty|remove all"
    bindsym $mod1+Ctrl+h workspace next
    bindsym $mod1+Ctrl+l workspace prev

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+h or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+h split h;exec notify-send 'tile horizontally'
    bindsym $mod+v split v;exec notify-send 'tile vertically'
    bindsym $mod+q split toggle

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen toggle
    # TODO ctrl+mod+f for global fullscreen?

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

    # workspace back and forth (with/without active container)
    workspace_auto_back_and_forth yes
    bindsym $mod+b workspace back_and_forth
    bindsym $mod+Shift+b move container to workspace back_and_forth; workspace back_and_forth

    # toggle sticky (so it shows up in all workspaces in that output)
    bindsym $mod+Shift+s sticky toggle

#
# Scratchpad:
#

    # move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

#
# Resizing containers (you can also use mouse):
#
    mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Uses vim-style directions
        # Uppercase (Shift+) will grow the window in that direction
        # TODO this might not work? not shown in man pages
        bindsym Shift+$left resize grow left 5
        bindsym Shift+$down resize grow down 5
        bindsym Shift+$up resize grow up 5
        bindsym Shift+$right resize grow right 5

        # Lowercase (normal) will shrink FROM that direction
        # (As if being pushed from that direction)
        # E.g. left is inverse of shift+right
        bindsym $left resize shrink right 5
        bindsym $down resize shrink up 5
        bindsym $up resize shrink down 5
        bindsym $right resize shrink left 5


        # Arrow keys shrink and grow from both ends
        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will grow the window’s height.
        # Pressing down will shrink the window’s height.
        bindsym Left resize shrink width 10
        bindsym Down resize shrink height 10
        bindsym Up resize grow height 10
        bindsym Right resize grow width 10

        # Allow focus movement:
        bindsym $mod1+$left focus left
        bindsym $mod1+$down focus down
        bindsym $mod1+$up focus up
        bindsym $mod1+$right focus right
        bindsym $mod1+Left focus left
        bindsym $mod1+Down focus down
        bindsym $mod1+Up focus up
        bindsym $mod1+Right focus right

        # Allow workspace switching
        bindsym $mod+1 workspace number $ws1
        bindsym $mod+2 workspace number $ws2
        bindsym $mod+3 workspace number $ws3
        bindsym $mod+4 workspace number $ws4
        bindsym $mod+5 workspace number $ws5
        bindsym $mod+6 workspace number $ws6
        bindsym $mod+7 workspace number $ws7
        bindsym $mod+8 workspace number $ws8
        bindsym $mod+9 workspace number $ws9
        bindsym $mod+0 workspace number $ws10

        # exit resize mode: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
    }
    bindsym $mod+r mode "resize"

#
# Rearranging outputs/screens
#
    mode "output" {

        # Move workspace to output/screen
        bindsym h move workspace to output left
        bindsym l move workspace to output right

        # Or use Arrow keys
        bindsym Left move workspace to output left
        bindsym Right move workspace to output right

        # Allow workspace selection in this mode
        bindsym $mod+1 workspace number $ws1
        bindsym $mod+2 workspace number $ws2
        bindsym $mod+3 workspace number $ws3
        bindsym $mod+4 workspace number $ws4
        bindsym $mod+5 workspace number $ws5
        bindsym $mod+6 workspace number $ws6
        bindsym $mod+7 workspace number $ws7
        bindsym $mod+8 workspace number $ws8
        bindsym $mod+9 workspace number $ws9
        bindsym $mod+0 workspace number $ws10

        # exit output mode: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
    }
    bindsym $mod+o mode "output"

#
# Sound buttons
#

# TODO review
# TODO adwaita audio-volume-muted-symbolic?
# TODO review notify-send tagging, this seems to work but idk
# TODO seem to be bound elsewhere? don't appear to be picked up
bindsym XF86AudioMute exec "pactl set-sink-mute @DEFAULT_SINK@ toggle; notify-send --urgency low -h string:x-canonical-private-synchronous:mute \\"Mute: $(pactl get-sink-mute @DEFAULT_SINK@)\\""
bindsym XF86AudioRaiseVolume exec "pactl set-sink-mute @DEFAULT_SINK@ 0; pactl set-sink-volume @DEFAULT_SINK@ +5%; notify-send --urgency low -h string:x-canonical-private-synchronous:vol \\"$(pactl get-sink-volume @DEFAULT_SINK@)\\""
bindsym XF86AudioLowerVolume exec "pactl set-sink-mute @DEFAULT_SINK@ 0; pactl set-sink-volume @DEFAULT_SINK@ -5%; notify-send --urgency low -h string:x-canonical-private-synchronous:vol \\"$(pactl get-sink-volume @DEFAULT_SINK@)\\""

#
# Backlight
#
# bound somewhere else by libinput?
bindsym XF86MonBrightnessUp exec 'notify-send --urgency low -h string:x-canonical-private-synchronous:brightness "brightness up ($(brightnessctl -m -c backlight set +5% | cut -d, -f4))"'
bindsym XF86MonBrightnessDown exec 'notify-send --urgency low -h string:x-canonical-private-synchronous:brightness "brightness down ($(brightnessctl -m -c backlight set 5%- | cut -d, -f4))"'

#
# Bluetooth
#
# NOTE: the button is already set to enable/disable bluetooth soft block, this only needs to make the notification
bindsym XF86Bluetooth exec 'notify-send --urgency low -h string:x-canonical-private-synchronous:bluetooth "$(rfkill -n --output DEVICE,SOFT list bluetooth)"'

###############################

## set default desktop layout (default is tiling)
## workspace_layout tabbed <stacking|tabbed>
#
## Configure border style <normal|1pixel|pixel xx|none|pixel>
#default_border pixel 1
#default_floating_border normal
#
## Hide borders
#hide_edge_borders none
#
## change borders
#bindsym $mod+u border none
#bindsym $mod+y border pixel 1
#bindsym $mod+n border normal
#
## Font for window titles. Will also be used by the bar unless a different font
## is used in the bar {} block below.
#font pango:PragmataPro Liga 11




################################################################################################

## TODO
#
#bindsym $mod+Ctrl+m exec pavucontrol
## Start Applications
#bindsym $mod+Ctrl+b exec kitty -e 'bmenu'
#bindsym $mod+F2 exec palemoon
#bindsym $mod+F3 exec pcmanfm
## bindsym $mod+F3 exec ranger
#bindsym $mod+Shift+F3 exec pcmanfm_pkexec
#bindsym $mod+F5 exec terminal -e 'mocp'
#bindsym $mod+t exec --no-startup-id pkill compton
#bindsym $mod+Ctrl+t exec --no-startup-id compton -b
#bindsym $mod+Shift+d --release exec "killall dunst; exec notify-send 'restart dunst'"
#bindsym Print exec --no-startup-id i3-scrot
#bindsym $mod+Print --release exec --no-startup-id i3-scrot -w
#bindsym $mod+Shift+Print --release exec --no-startup-id i3-scrot -s
#bindsym $mod+Shift+h exec xdg-open /usr/share/doc/manjaro/i3_help.pdf
#bindsym $mod+Ctrl+x --release exec --no-startup-id xkill
#
#
#
## Open applications on specific workspaces
## assign [class="Thunderbird"] $ws1
## assign [class="Pale moon"] $ws2
## assign [class="Pcmanfm"] $ws3
## assign [class="Skype"] $ws5
#
## Open specific applications in floating mode
#for_window [title="alsamixer"] floating enable border pixel 1
#for_window [class="calamares"] floating enable border normal
#for_window [class="Clipgrab"] floating enable
#for_window [title="File Transfer*"] floating enable
#for_window [class="fpakman"] floating enable
#for_window [class="Galculator"] floating enable border pixel 1
#for_window [class="GParted"] floating enable border normal
#for_window [title="i3_help"] floating enable sticky enable border normal
#for_window [class="Lightdm-settings"] floating enable
#for_window [class="Lxappearance"] floating enable sticky enable border normal
#for_window [class="Manjaro-hello"] floating enable
#for_window [class="Manjaro Settings Manager"] floating enable border normal
#for_window [title="MuseScore: Play Panel"] floating enable
#for_window [class="Nitrogen"] floating enable sticky enable border normal
#for_window [class="Oblogout"] fullscreen enable
#for_window [class="octopi"] floating enable
#for_window [title="About Pale Moon"] floating enable
#for_window [class="Pamac-manager"] floating enable
#for_window [class="Pavucontrol"] floating enable
#for_window [class="qt5ct"] floating enable sticky enable border normal
#for_window [class="Qtconfig-qt4"] floating enable sticky enable border normal
#for_window [class="Simple-scan"] floating enable border normal
#for_window [class="(?i)System-config-printer.py"] floating enable border normal
#for_window [class="Skype"] floating enable border normal
#for_window [class="Timeset-gui"] floating enable border normal
#for_window [class="(?i)virtualbox"] floating enable border normal
#for_window [class="Xfburn"] floating enable
#
## switch to workspace with urgent window automatically
#for_window [urgent=latest] focus

## restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
#bindsym $mod+Shift+r restart
#
## exit i3 (logs you out of your X session)
#bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"
#
## Set shut down, restart and locking features
#bindsym $mod+0 mode "$mode_system"
#set $mode_system (l)ock, (e)xit, switch_(u)ser, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
#mode "$mode_system" {
#    # NOTE - this generally uses a custom i3exit
#    bindsym l exec --no-startup-id i3exit lock, mode "default"
#    bindsym s exec --no-startup-id i3exit suspend, mode "default"
#    bindsym u exec --no-startup-id i3exit switch_user, mode "default"
#    bindsym e exec --no-startup-id i3exit logout, mode "default"
#    bindsym h exec --no-startup-id i3exit hibernate, mode "default"
#    bindsym r exec --no-startup-id i3exit reboot, mode "default"
#    bindsym Shift+s exec --no-startup-id i3exit shutdown, mode "default"
#
#    # exit system mode: "Enter" or "Escape"
#    bindsym Return mode "default"
#    bindsym Escape mode "default"
#}
#
## Lock screen
#bindsym $mod+9 exec --no-startup-id locker
#
## Autostart applications
#exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
#exec --no-startup-id nitrogen --restore; sleep 1; compton -b
#exec --no-startup-id manjaro-hello
#exec --no-startup-id nm-applet
#exec --no-startup-id xfce4-power-manager
#exec --no-startup-id pamac-tray
#exec --no-startup-id clipit
## exec --no-startup-id blueman-applet
## exec_always --no-startup-id sbxkb
#exec --no-startup-id start_conky_maia
## exec --no-startup-id start_conky_green
#exec --no-startup-id xautolock -time 10 -locker locker
#exec_always --no-startup-id ff-theme-util
#exec_always --no-startup-id fix_xcursor
#
## Color palette used for the terminal ( ~/.Xresources file )
## Colors are gathered based on the documentation:
## https://i3wm.org/docs/userguide.html#xresources
## Change the variable name at the place you want to match the color
## of your terminal like this:
## [example]
## If you want your bar to have the same background color as your
## terminal background change the line 362 from:
## background #14191D
## to:
## background $term_background
## Same logic applied to everything else.
#set_from_resource $term_background background
#set_from_resource $term_foreground foreground
#set_from_resource $term_color0     color0
#set_from_resource $term_color1     color1
#set_from_resource $term_color2     color2
#set_from_resource $term_color3     color3
#set_from_resource $term_color4     color4
#set_from_resource $term_color5     color5
#set_from_resource $term_color6     color6
#set_from_resource $term_color7     color7
#set_from_resource $term_color8     color8
#set_from_resource $term_color9     color9
#set_from_resource $term_color10    color10
#set_from_resource $term_color11    color11
#set_from_resource $term_color12    color12
#set_from_resource $term_color13    color13
#set_from_resource $term_color14    color14
#set_from_resource $term_color15    color15
#
## Start i3bar to display a workspace bar (plus the system information i3status if available)
#bar {
#	i3bar_command i3bar
#	status_command i3status
#	position bottom
#
### please set your primary output first. Example: 'xrandr --output eDP1 --primary'
##	tray_output primary
##	tray_output eDP1
#
#	bindsym button4 nop
#	bindsym button5 nop
##   font xft:URWGothic-Book 11
#	strip_workspace_numbers yes
#
#    colors {
#        background #222D31
#        statusline #F9FAF9
#        separator  #454947
#
##                      border  backgr. text
#        focused_workspace  #F9FAF9 #16a085 #292F34
#        active_workspace   #595B5B #353836 #FDF6E3
#        inactive_workspace #595B5B #222D31 #EEE8D5
#        binding_mode       #16a085 #2C2C2C #F9FAF9
#        urgent_workspace   #16a085 #FDF6E3 #E5201D
#    }
#}
#
## hide/unhide i3status bar
#bindsym $mod+m bar mode toggle
#
## Theme colors
## class                   border  backgr. text    indic.   child_border
#  client.focused          #556064 #556064 #80FFF9 #FDF6E3
#  client.focused_inactive #2F3D44 #2F3D44 #1ABC9C #454948
#  client.unfocused        #2F3D44 #2F3D44 #1ABC9C #454948
#  client.urgent           #CB4B16 #FDF6E3 #1ABC9C #268BD2
#  client.placeholder      #000000 #0c0c0c #ffffff #000000
#
#  client.background       #2B2C2B
#
#############################
### settings for i3-gaps: ###
#############################
#
## Set inner/outer gaps
#gaps inner 14
#gaps outer -2
#
## Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
## gaps inner|outer current|all set|plus|minus <px>
## gaps inner all set 10
## gaps outer all plus 5
#
## Smart gaps (gaps used if only more than one container on the workspace)
#smart_gaps on
#
## Smart borders (draw borders around container only if it is not the only container on this workspace)
## on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
#smart_borders on
#
## Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
#set $mode_gaps Gaps: (o) outer, (i) inner
#set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
#set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
#bindsym $mod+Shift+g mode "$mode_gaps"
#
#mode "$mode_gaps" {
#        bindsym o      mode "$mode_gaps_outer"
#        bindsym i      mode "$mode_gaps_inner"
#        bindsym Return mode "default"
#        bindsym Escape mode "default"
#}
#mode "$mode_gaps_inner" {
#        bindsym plus  gaps inner current plus 5
#        bindsym minus gaps inner current minus 5
#        bindsym 0     gaps inner current set 0
#
#        bindsym Shift+plus  gaps inner all plus 5
#        bindsym Shift+minus gaps inner all minus 5
#        bindsym Shift+0     gaps inner all set 0
#
#        bindsym Return mode "default"
#        bindsym Escape mode "default"
#}
#mode "$mode_gaps_outer" {
#        bindsym plus  gaps outer current plus 5
#        bindsym minus gaps outer current minus 5
#        bindsym 0     gaps outer current set 0
#
#        bindsym Shift+plus  gaps outer all plus 5
#        bindsym Shift+minus gaps outer all minus 5
#        bindsym Shift+0     gaps outer all set 0
#
#        bindsym Return mode "default"
#        bindsym Escape mode "default"
#}
#
#
# user config directory
# TODO note/document that this works properly!
include ${XDG_CONFIG_HOME:-$HOME/.config}/sway/config.d/*

# Add any user/machine specific config to the user config directory

# TODO also maybe want to include sysconfdir?
# In the current case (EndeavorOS sway), this config contents are copied into ~/.config/sway/config.d/autostart_applications
# include /etc/sway/config.d/*
